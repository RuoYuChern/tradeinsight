package com.tao.trade.infra.db.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CnStockIpoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public CnStockIpoExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNull() {
            addCriterion("symbol is null");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNotNull() {
            addCriterion("symbol is not null");
            return (Criteria) this;
        }

        public Criteria andSymbolEqualTo(String value) {
            addCriterion("symbol =", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotEqualTo(String value) {
            addCriterion("symbol <>", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThan(String value) {
            addCriterion("symbol >", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("symbol >=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThan(String value) {
            addCriterion("symbol <", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThanOrEqualTo(String value) {
            addCriterion("symbol <=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLike(String value) {
            addCriterion("symbol like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotLike(String value) {
            addCriterion("symbol not like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolIn(List<String> values) {
            addCriterion("symbol in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotIn(List<String> values) {
            addCriterion("symbol not in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolBetween(String value1, String value2) {
            addCriterion("symbol between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotBetween(String value1, String value2) {
            addCriterion("symbol not between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIpoDateIsNull() {
            addCriterion("ipo_date is null");
            return (Criteria) this;
        }

        public Criteria andIpoDateIsNotNull() {
            addCriterion("ipo_date is not null");
            return (Criteria) this;
        }

        public Criteria andIpoDateEqualTo(Date value) {
            addCriterionForJDBCDate("ipo_date =", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ipo_date <>", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateGreaterThan(Date value) {
            addCriterionForJDBCDate("ipo_date >", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ipo_date >=", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateLessThan(Date value) {
            addCriterionForJDBCDate("ipo_date <", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ipo_date <=", value, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateIn(List<Date> values) {
            addCriterionForJDBCDate("ipo_date in", values, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ipo_date not in", values, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ipo_date between", value1, value2, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIpoDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ipo_date not between", value1, value2, "ipoDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateIsNull() {
            addCriterion("issue_date is null");
            return (Criteria) this;
        }

        public Criteria andIssueDateIsNotNull() {
            addCriterion("issue_date is not null");
            return (Criteria) this;
        }

        public Criteria andIssueDateEqualTo(Date value) {
            addCriterionForJDBCDate("issue_date =", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("issue_date <>", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateGreaterThan(Date value) {
            addCriterionForJDBCDate("issue_date >", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("issue_date >=", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateLessThan(Date value) {
            addCriterionForJDBCDate("issue_date <", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("issue_date <=", value, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateIn(List<Date> values) {
            addCriterionForJDBCDate("issue_date in", values, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("issue_date not in", values, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("issue_date between", value1, value2, "issueDate");
            return (Criteria) this;
        }

        public Criteria andIssueDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("issue_date not between", value1, value2, "issueDate");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(BigDecimal value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(BigDecimal value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(BigDecimal value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(BigDecimal value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<BigDecimal> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<BigDecimal> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountIsNull() {
            addCriterion("market_amount is null");
            return (Criteria) this;
        }

        public Criteria andMarketAmountIsNotNull() {
            addCriterion("market_amount is not null");
            return (Criteria) this;
        }

        public Criteria andMarketAmountEqualTo(BigDecimal value) {
            addCriterion("market_amount =", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountNotEqualTo(BigDecimal value) {
            addCriterion("market_amount <>", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountGreaterThan(BigDecimal value) {
            addCriterion("market_amount >", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("market_amount >=", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountLessThan(BigDecimal value) {
            addCriterion("market_amount <", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("market_amount <=", value, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountIn(List<BigDecimal> values) {
            addCriterion("market_amount in", values, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountNotIn(List<BigDecimal> values) {
            addCriterion("market_amount not in", values, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("market_amount between", value1, value2, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andMarketAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("market_amount not between", value1, value2, "marketAmount");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPeIsNull() {
            addCriterion("pe is null");
            return (Criteria) this;
        }

        public Criteria andPeIsNotNull() {
            addCriterion("pe is not null");
            return (Criteria) this;
        }

        public Criteria andPeEqualTo(BigDecimal value) {
            addCriterion("pe =", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeNotEqualTo(BigDecimal value) {
            addCriterion("pe <>", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeGreaterThan(BigDecimal value) {
            addCriterion("pe >", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pe >=", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeLessThan(BigDecimal value) {
            addCriterion("pe <", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pe <=", value, "pe");
            return (Criteria) this;
        }

        public Criteria andPeIn(List<BigDecimal> values) {
            addCriterion("pe in", values, "pe");
            return (Criteria) this;
        }

        public Criteria andPeNotIn(List<BigDecimal> values) {
            addCriterion("pe not in", values, "pe");
            return (Criteria) this;
        }

        public Criteria andPeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pe between", value1, value2, "pe");
            return (Criteria) this;
        }

        public Criteria andPeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pe not between", value1, value2, "pe");
            return (Criteria) this;
        }

        public Criteria andLimitAmountIsNull() {
            addCriterion("limit_amount is null");
            return (Criteria) this;
        }

        public Criteria andLimitAmountIsNotNull() {
            addCriterion("limit_amount is not null");
            return (Criteria) this;
        }

        public Criteria andLimitAmountEqualTo(BigDecimal value) {
            addCriterion("limit_amount =", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountNotEqualTo(BigDecimal value) {
            addCriterion("limit_amount <>", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountGreaterThan(BigDecimal value) {
            addCriterion("limit_amount >", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("limit_amount >=", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountLessThan(BigDecimal value) {
            addCriterion("limit_amount <", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("limit_amount <=", value, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountIn(List<BigDecimal> values) {
            addCriterion("limit_amount in", values, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountNotIn(List<BigDecimal> values) {
            addCriterion("limit_amount not in", values, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("limit_amount between", value1, value2, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andLimitAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("limit_amount not between", value1, value2, "limitAmount");
            return (Criteria) this;
        }

        public Criteria andFundsIsNull() {
            addCriterion("funds is null");
            return (Criteria) this;
        }

        public Criteria andFundsIsNotNull() {
            addCriterion("funds is not null");
            return (Criteria) this;
        }

        public Criteria andFundsEqualTo(BigDecimal value) {
            addCriterion("funds =", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsNotEqualTo(BigDecimal value) {
            addCriterion("funds <>", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsGreaterThan(BigDecimal value) {
            addCriterion("funds >", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("funds >=", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsLessThan(BigDecimal value) {
            addCriterion("funds <", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("funds <=", value, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsIn(List<BigDecimal> values) {
            addCriterion("funds in", values, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsNotIn(List<BigDecimal> values) {
            addCriterion("funds not in", values, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("funds between", value1, value2, "funds");
            return (Criteria) this;
        }

        public Criteria andFundsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("funds not between", value1, value2, "funds");
            return (Criteria) this;
        }

        public Criteria andBallotIsNull() {
            addCriterion("ballot is null");
            return (Criteria) this;
        }

        public Criteria andBallotIsNotNull() {
            addCriterion("ballot is not null");
            return (Criteria) this;
        }

        public Criteria andBallotEqualTo(BigDecimal value) {
            addCriterion("ballot =", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotNotEqualTo(BigDecimal value) {
            addCriterion("ballot <>", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotGreaterThan(BigDecimal value) {
            addCriterion("ballot >", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ballot >=", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotLessThan(BigDecimal value) {
            addCriterion("ballot <", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ballot <=", value, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotIn(List<BigDecimal> values) {
            addCriterion("ballot in", values, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotNotIn(List<BigDecimal> values) {
            addCriterion("ballot not in", values, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ballot between", value1, value2, "ballot");
            return (Criteria) this;
        }

        public Criteria andBallotNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ballot not between", value1, value2, "ballot");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated do_not_delete_during_merge Fri Feb 24 13:48:08 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.cn_stock_ipo
     *
     * @mbg.generated Fri Feb 24 13:48:08 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}